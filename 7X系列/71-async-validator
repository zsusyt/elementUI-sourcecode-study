elementUI的form组件支持验证，可以通过向form传入一个rules对象来定制验证规则。

    一般rules是放在data里面，这样各种表现比较符合预期，但是有些需求是这样的：
在某种情况下，某个字段的条件是这样的，在另一种情况下，条件又变成那样的。最简单的就是是否必填。

    因为在例子中rules是放在data中的，熟悉vuejs的一定知道data中返回对象中的元素跟计算属性
中的元素某种意义上是差不多的。只是data中的元素不会根据依赖元素的变化而动态变化，而计算属性
中的元素可以。这正暗合前述需求，所以我尝试把rules写在计算属性中。

    结果还好，大致是满足需求的。但是由此产生了另一个问题：如果写在data中，被验证的字段只有在
用户操作过(也就是blur或者change后)才会触发验证，从而显示出红色的提示文案；但是写在计算属性
中，一加载就会触发验证，显示文案，十分不美观(我猜想是跟计算属性的更新机制有关的)，
更有甚者，对于通过代码填入某些input的验证字段，我估计是因为验证及代码填入的执行次序问题，
验证在先，填入在后，具体表现就是针对一些必填的input，即使后面填入了内容，但是在验证的时候是空的，
就会提示未填写。

    为解决这个问题，需要使用async-validator的另外一些api，比如clearValidate。可以在组件的
mounted钩子函数中使用，或者在具体的method中使用。必要的时候可以辅以this.$nextTick()。